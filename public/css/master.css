@-webkit-viewport {
  width: device-width;
}

@-moz-viewport {
  width: device-width;
}

@-ms-viewport {
  width: device-width;
}

@viewport {
  width: device-width;
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

.clearfix:before, .clearfix:after {
  content: " ";
  display: table;
}

.clearfix:after {
  clear: both;
}

article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block;
}

audio, canvas, progress, video {
  display: inline-block;
  vertical-align: baseline;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden], template {
  display: none;
}

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}

button {
  overflow: visible;
}

button, select {
  text-transform: none;
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled], html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input {
  line-height: normal;
}

input[type="checkbox"], input[type="radio"] {
  padding: 0;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
}

optgroup {
  font-weight: bold;
}

img {
  max-width: 100%;
  border: 0;
}

img[width],
img[height] {
  max-width: none;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 0;
  padding: 0;
}

figure > img {
  display: block;
}

figure figcaption {
  margin: 0;
  padding: 0;
}

a {
  background: transparent;
  color: #A4CE39;
  text-decoration: none;
}

a:active {
  background-color: #A4CE39;
  color: #222;
  outline: 0;
}

a:hover {
  border-bottom: 2px solid #A4CE39;
  outline: 0;
}

a:focus {
  outline-color: #A4CE39;
}

ul,
ol {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

li > ul,
li > ol {
  margin-bottom: 0;
}

html {
  background: #f7f4f1;
  min-height: 100%;
  overflow-y: scroll;
}

body {
  font-family: Georgia, Droid Serif, serif;
  font-size: 100%;
  line-height: 1.4;
  background-color: transparent;
  color: #222;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td, th {
  padding: 0;
}

/* WebKit/Blink Browsers */
::-moz-selection {
  background: #A4CE39;
}
::selection {
  background: #A4CE39;
}

/* Gecko Browsers */
::-moz-selection {
  background: #A4CE39;
}

abbr[title] {
  border-bottom: 2px dotted #A4CE39;
}

b, strong {
  font-weight: bold;
}

em, i {
  font-style: italic;
}

dfn {
  font-style: italic;
}

h1, h2, h3, h4, h5, h6 {
  margin: 0;
  padding: 0;
}

h1 {
  font-size: 3.815em;
}

h2 {
  font-size: 3.052em;
}

h3 {
  font-size: 2.441em;
}

h4 {
  font-size: 1.953em;
}

h5 {
  font-size: 1.563em;
}

h6 {
  font-size: 1.25em;
}

mark {
  background: rgba(164, 206, 57, 0.5);
  color: #222;
  padding: 2px;
}

small {
  font-size: 90%;
}

sub,
sup {
  font-size: 90%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5rem;
}

sub {
  bottom: -0.5rem;
}

hr {
  height: 0;
}

code,
kbd,
pre,
samp {
  font-family: monospace;
  letter-spacing: 1px;
  color: #575757;
}

code,
kbd {
  padding: .2rem .4rem;
  border-top: solid 1px #eee;
  border-left: solid 1px #eee;
  border-right: solid 1px #eee;
  border-bottom: solid 1px #eee;
}

code {
  display: block;
  line-height: 2;
}

pre {
  overflow: auto;
}

/*# sourceMappingURL=data:application/json;base64, */
