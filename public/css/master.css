@-webkit-viewport {
  width: device-width;
}

@-moz-viewport {
  width: device-width;
}

@-ms-viewport {
  width: device-width;
}

@viewport {
  width: device-width;
}

*, *:before, *:after {
  box-sizing: border-box;
}

.cf:before, .cf:after,
.clearfix:before,
.clearfix:after {
  content: " ";
  display: table;
}

.cf:after,
.clearfix:after {
  clear: both;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden],
template {
  display: none;
}

html {
  background: #FFFFEE;
  min-height: 100%;
  overflow-y: scroll;
}

body {
  margin: 0;
  font-family: Georgia, Droid Serif, serif;
  font-size: 100%;
  line-height: 1.6;
  background-color: transparent;
  color: #222;
}

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}

button {
  overflow: visible;
}

button, select {
  text-transform: none;
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled], html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input {
  line-height: normal;
}

input[type="checkbox"], input[type="radio"] {
  padding: 0;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

fieldset {
  border: 1px solid #ccc;
  margin: 0;
  padding: 1rem;
}

legend {
  border: 0;
  padding: 0 1rem;
}

textarea {
  overflow: auto;
}

optgroup {
  font-weight: bold;
}

img {
  max-width: 100%;
  height: auto;
  border: 0;
}

img[width],
img[height] {
  max-width: none;
}

svg:not(:root) {
  overflow: hidden;
}

a {
  background: transparent;
  color: #A4CE39;
  text-decoration: none;
}

a:active {
  background-color: #A4CE39;
  color: #222;
  outline: 0;
}

a:hover {
  border-bottom: 2px solid #A4CE39;
  outline: 0;
}

a:focus {
  outline-color: #A4CE39;
}

ul, ol {
  padding-left: 1.5rem;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td, th {
  padding: 0;
}

::-moz-selection {
  background: rgba(164, 206, 57, 0.5);
}

::selection {
  background: rgba(164, 206, 57, 0.5);
}

abbr[title] {
  border-bottom: 2px dotted rgba(164, 206, 57, 0.5);
}

b, strong {
  font-weight: bold;
}

em, i {
  font-style: italic;
}

dfn {
  font-style: italic;
}

h1 {
  font-size: 1.802em;
  margin: 0;
  margin-bottom: 1rem;
}

h2 {
  font-size: 1.602em;
  margin: 0;
  margin-bottom: 1rem;
}

h3 {
  font-size: 1.424em;
  margin: 0;
  margin-bottom: 1rem;
}

h4 {
  font-size: 1.266em;
  margin: 0;
  margin-bottom: 1rem;
}

h5 {
  font-size: 1.125em;
  margin: 0;
  margin-bottom: 1rem;
}

h6 {
  font-size: 1em;
  margin: 0;
  margin-bottom: 1rem;
}

mark {
  background: rgba(164, 206, 57, 0.5);
  color: #222;
  padding: 2px;
}

small {
  font-size: 90%;
}

sub,
sup {
  font-size: 90%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5rem;
}

sub {
  bottom: -0.5rem;
}

hr {
  height: 0;
}

kbd {
  border: 1px solid #ccc;
  padding: 0.25rem;
}

samp,
code {
  display: block;
}

samp,
pre {
  padding: 1rem;
  overflow: auto;
  margin: 0;
  background-color: rgba(164, 206, 57, 0.5);
}

blockquote {
  margin: 1rem;
  font-style: italic;
  font-size: 110%;
  text-indent: -0.41em;
  quotes: '"' '"';
}

blockquote p:before {
  content: '"';
  content: open-quote;
}

blockquote p:after {
  content: "";
  content: no-close-quote;
}

blockquote p:last-of-type {
  margin-bottom: 0;
}

blockquote p:last-of-type:after {
  content: '"';
  content: close-quote;
}

blockquote q:before {
  content: "\2018";
  content: open-quote;
}

blockquote q:after {
  content: "\2019";
  content: close-quote;
}

.example {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  height: 100vh;
}

@media (min-width: 48em) {
  .example {
    background: red;
  }
}

.button {
  border: none;
  padding: 1rem 2.3rem;
  color: black;
}

.button:hover {
  color: white;
}

.button:active {
  background-color: gray;
}

.is--hidden {
  display: none;
  visibility: hidden;
}

.is--visiable {
  display: block;
  visibility: visible;
}

/*# sourceMappingURL=data:application/json;base64, */
