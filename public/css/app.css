*,
*:before,
*:after {
  box-sizing: border-box;
}

.clearfix:before,
.clearfix:after {
  content: " ";
  display: table;
}

.clearfix:after {
  clear: both;
}

@-webkit-viewport {
  width: device-width;
}

@-moz-viewport {
  width: device-width;
}

@-ms-viewport {
  width: device-width;
}

@-o-viewport {
  width: device-width;
}

@viewport {
  width: device-width;
}

article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block;
}

audio, canvas, progress, video {
  display: inline-block;
  vertical-align: baseline;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden], template {
  display: none;
}

html {
  background: #f7f4f1;
  min-height: 100%;
  overflow-y: scroll;
}

body {
  font-family: Georgia, Droid Serif, serif;
  font-size: 100%;
  line-height: 1.4;
  background-color: transparent;
  color: #222222;
}

a {
  background: transparent;
  color: #FFE533;
  text-decoration: none;
}

a:visited {
  color: #FFE533;
}

a:active {
  color: #FFE533;
  outline: 0;
}

a:hover {
  color: #DE8A00;
  outline: 0;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b, strong {
  font-weight: bold;
}

em, i {
  font-style: italic;
}

dfn {
  font-style: italic;
}

h1, h2, h3, h4, h5, h6 {
  margin: 0;
  padding: 0;
}

h1 {
  font-size: 3.815em;
}

h2 {
  font-size: 3.052em;
}

h3 {
  font-size: 2.441em;
}

h4 {
  font-size: 1.953em;
}

h5 {
  font-size: 1.563em;
}

h6 {
  font-size: 1.25em;
}

mark {
  background: #ff0;
  color: #000;
}

small {
  font-size: 90%;
}

sub,
sup {
  font-size: 90%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5rem;
}

sub {
  bottom: -0.5rem;
}

hr {
  height: 0;
}

code,
kbd,
pre,
samp {
  font-family: monospace;
  letter-spacing: 1px;
  color: #575757;
}

code,
kbd {
  padding: 0.2rem 0.4rem;
  border-top: solid 1px #eee;
  border-left: solid 1px #eee;
  border-right: solid 1px #eee;
  border-bottom: solid 1px #eee;
}

code {
  display: block;
  line-height: 2;
}

pre {
  overflow: auto;
}

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}

button {
  overflow: visible;
}

button, select {
  text-transform: none;
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled], html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input {
  line-height: normal;
}

input[type="checkbox"], input[type="radio"] {
  padding: 0;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
}

optgroup {
  font-weight: bold;
}

img {
  max-width: 100%;
  border: 0;
}

img[width],
img[height] {
  max-width: none;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 0;
  padding: 0;
}

figure > img {
  display: block;
}

figure figcaption {
  margin: 0;
  padding: 0;
}

ul,
ol {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

li > ul,
li > ol {
  margin-bottom: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td, th {
  padding: 0;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxpdGllcy9fYm94c2l6aW5nLnNjc3MiLCJ1dGlsaXRpZXMvX2NsZWFyZml4LnNjc3MiLCJ1dGlsaXRpZXMvX3ZpZXdwb3J0LnNjc3MiLCJiYXNlL19yZXNldHMuc2NzcyIsImJhc2UvX3NpdGUuc2NzcyIsImFwcC5zY3NzIiwiYmFzZS9fbGlua3Muc2NzcyIsImJhc2UvX3R5cG9ncmFwaHkuc2NzcyIsInV0aWxpdGllcy9fbWl4aW5zLnNjc3MiLCJiYXNlL19lbGVtZW50cy5zY3NzIiwiYmFzZS9faW1hZ2VzLnNjc3MiLCJiYXNlL19saXN0cy5zY3NzIiwiYmFzZS9fdGFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUMsQ0FBQztBQUNGLENBQUMsT0FBTztBQUNSLENBQUMsTUFBTSxDQUZDO0VBQ0osVUFBVSxFQUFFLFVBQVc7Q0FEbEI7O0FDQ0osU0FBUyxPQUFPO0FBQ3JCLFNBQVMsTUFBTSxDQURIO0VBQ0osT0FBTyxFQUFFLEdBQUk7RUFDYixPQUFPLEVBQUUsS0FBTTtDQUZWOztBQUlSLFNBQVMsTUFBTSxDQUFSO0VBQ0osS0FBSyxFQUFFLElBQUs7Q0FEUDs7QUNQYixpQkFBaUI7RUFBRyxLQUFLLEVBQUUsWUFBYTs7O0FBQ3hDLGNBQWM7RUFBRyxLQUFLLEVBQUUsWUFBYTs7O0FBQ3JDLGFBQWE7RUFBRyxLQUFLLEVBQUUsWUFBYTs7O0FBQ3BDLFlBQVk7RUFBRyxLQUFLLEVBQUUsWUFBYTs7O0FBQ25DLFNBQVM7RUFBRyxLQUFLLEVBQUUsWUFBYTs7O0FDSnlELE9BQU8sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUF4RjtFQUM3RixPQUFPLEVBQUUsS0FBTTtDQUQrRTs7QUFJekUsS0FBSyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUF4QjtFQUMz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QztFRnVGSCxNQUFNLEVBQUUsQ0FBRTtFQUNWLE9BQU8sRUFBRSxDQUFFO0NFeEZQOztBQUVGLE1BQU0sR0FBRyxHQUFHLENBQVI7RUFDRixPQUFPLEVBQUUsS0FBTTtDQURaOztBQUdQLE1BQU0sQ0FBQyxVQUFVLENBQU47RUZrRlgsTUFBTSxFQUFFLENBQUU7RUFDVixPQUFPLEVBQUUsQ0FBRTtDRW5GQzs7QUNsQmhCLEVBQUU7QUFDRixFQUFFLENBREM7RUhvR0MsTUFBTSxFQUFFLENBQUU7RUFDVixPQUFPLEVBQUUsQ0FBRTtFR25HWCxlQUFlLEVBQUUsSUFBSztDQUZ0Qjs7QUFPRSxFQUFFLEdBQUcsRUFBRTtBQUNiLEVBQUUsR0FBRyxFQUFFLENBREU7RUFDRCxhQUFhLEVBQUUsQ0FBRTtDQURmOztBQ1JWLEtBQUssQ0FBQztFQUNGLGVBQWUsRUFBRSxRQUFTO0VBQzFCLGNBQWMsRUFBRSxDQUFFO0NBRmY7O0FBS0gsRUFBRSxFQUFFLEVBQUUsQ0FBSDtFQUNILE9BQU8sRUFBRSxDQUFFO0NBRFAiLCJmaWxlIjoiYXBwLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiosXHJcbio6YmVmb3JlLFxyXG4qOmFmdGVyIHtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn0iLCIuY2xlYXJmaXgsXHJcbiVjbGVhcmZpeCB7XHJcbiAgICAmOmJlZm9yZSxcclxuICAgICY6YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiIFwiO1xyXG4gICAgICAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICAgfVxyXG4gICAgJjphZnRlciB7XHJcbiAgICAgICAgY2xlYXI6IGJvdGg7XHJcbiAgICB9XHJcbn0iLCJALXdlYmtpdC12aWV3cG9ydCB7IHdpZHRoOiBkZXZpY2Utd2lkdGg7IH1cclxuQC1tb3otdmlld3BvcnQgeyB3aWR0aDogZGV2aWNlLXdpZHRoOyB9XHJcbkAtbXMtdmlld3BvcnQgeyB3aWR0aDogZGV2aWNlLXdpZHRoOyB9XHJcbkAtby12aWV3cG9ydCB7IHdpZHRoOiBkZXZpY2Utd2lkdGg7IH1cclxuQHZpZXdwb3J0IHsgd2lkdGg6IGRldmljZS13aWR0aDsgfSAvLyBzZWUgaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTIzMjEwMiIsImFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1haW4sIG5hdiwgc2VjdGlvbiwgc3VtbWFyeSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuYXVkaW8sIGNhbnZhcywgcHJvZ3Jlc3MsIHZpZGVvIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuYXVkaW86bm90KFtjb250cm9sc10pIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBoZWlnaHQ6IDA7XHJcbn1cclxuXHJcbltoaWRkZW5dLCB0ZW1wbGF0ZSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59IiwiaHRtbCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAkaHRtbF9iYWNrZ3JvdW5kO1xyXG4gICAgbWluLWhlaWdodDogMTAwJTtcclxuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcclxufVxyXG5ib2R5IHtcclxuICAgIGZvbnQtZmFtaWx5OiAkaHRtbF9mb250X2ZhbWlseTtcclxuICAgIGZvbnQtc2l6ZTogMTAwJTtcclxuICAgIGxpbmUtaGVpZ2h0OiAkaHRtbF9saW5lX2hlaWdodDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgY29sb3I6ICRodG1sX3RleHRfY29sb3I7XHJcbn0iLCJAY2hhcnNldCBcIlVURi04XCI7XHJcbi8vXHJcbi8vIENvbG9yc1xyXG4vL1xyXG4kYnJhbmRfY29sb3JzOiAoXHJcbiAgICB5ZWxsb3c6ICAjRkZFNTMzLFxyXG4gICAgZ3JlZW46ICAjMDA4QTAwLFxyXG4gICAgb3JhbmdlOiAjREU4QTAwLFxyXG4gICAgYmx1ZTogICAgIzQwOTlGRixcclxuICAgIGJhY2tncm91bmQ6ICNmN2Y0ZjEsXHJcbiAgICB0ZXh0OiAjMjIyMjIyXHJcbikgIWRlZmF1bHQ7XHJcbiRodG1sX2JhY2tncm91bmQ6IG1hcC1nZXQoJGJyYW5kX2NvbG9ycywgYmFja2dyb3VuZCkgIWRlZmF1bHQ7XHJcbiRodG1sX3RleHRfY29sb3I6IG1hcC1nZXQoJGJyYW5kX2NvbG9ycywgdGV4dCkgIWRlZmF1bHQ7XHJcbiRodG1sX2xpbmtfY29sb3I6IG1hcC1nZXQoJGJyYW5kX2NvbG9ycywgeWVsbG93KSAhZGVmYXVsdDtcclxuJGh0bWxfbGlua19jb2xvcl92aXNpdGVkOiBtYXAtZ2V0KCRicmFuZF9jb2xvcnMsIHllbGxvdykgIWRlZmF1bHQ7XHJcbiRodG1sX2xpbmtfY29sb3JfYWN0aXZlOiBtYXAtZ2V0KCRicmFuZF9jb2xvcnMsIHllbGxvdykgIWRlZmF1bHQ7XHJcbiRodG1sX2xpbmtfY29sb3JfaG92ZXI6IG1hcC1nZXQoJGJyYW5kX2NvbG9ycywgb3JhbmdlKSAhZGVmYXVsdDtcclxuLy9cclxuLy8gIFR5cG9ncmFwaHlcclxuLy9cclxuJGh0bWxfZm9udF9mYW1pbHk6IEdlb3JnaWEsIERyb2lkIFNlcmlmLCBzZXJpZiAhZGVmYXVsdDtcclxuJGh0bWxfbGluZV9oZWlnaHQ6IDEuNCAhZGVmYXVsdDtcclxuJGhlYWRsaW5lczogKFxyXG4gIGgxOiAzLjgxNWVtLFxyXG4gIGgyOiAzLjA1MmVtLFxyXG4gIGgzOiAyLjQ0MWVtLFxyXG4gIGg0OiAxLjk1M2VtLFxyXG4gIGg1OiAxLjU2M2VtLFxyXG4gIGg2OiAxLjI1ZW1cclxuKSAhZGVmYXVsdDtcclxuLy9cclxuLy8gIE1lZGlhIFF1ZXJpZXNcclxuLy9cclxuJG1xX2Jhc2VfZm9udF9zaXplOiAxNnB4ICFkZWZhdWx0O1xyXG4kbXFfcmVzcG9uc2l2ZTogdHJ1ZSAhZGVmYXVsdDtcclxuJG1xX2JyZWFrcG9pbnRzOiAoXHJcbiAgICBtb2JpbGU6ICAzMGVtLFxyXG4gICAgdGFibGV0OiAgMzZlbSxcclxuICAgIGRlc2t0b3A6IDQ4ZW0sXHJcbiAgICB3aWRlOiAgICA2MmVtXHJcbikgIWRlZmF1bHQ7XHJcbiRtcV9zdGF0aWNfYnJlYWtwb2ludDogZGVza3RvcCAhZGVmYXVsdDtcclxuJG1xX21lZGlhX3R5cGU6IGFsbCAhZGVmYXVsdDtcclxuLy9cclxuLy8gVXRpbGl0aWVzXHJcbi8vXHJcbkBpbXBvcnQgJ3V0aWxpdGllcy9taXhpbnMnO1xyXG5AaW1wb3J0ICd1dGlsaXRpZXMvYm94c2l6aW5nJztcclxuQGltcG9ydCAndXRpbGl0aWVzL2NsZWFyZml4JztcclxuQGltcG9ydCAndXRpbGl0aWVzL3ZpZXdwb3J0JztcclxuQGltcG9ydCAndXRpbGl0aWVzL21lZGlhLXF1ZXJpZXMnO1xyXG4vL1xyXG4vLyAgQmFzZVxyXG4vL1xyXG5AaW1wb3J0ICdiYXNlL3Jlc2V0cyc7XHJcbkBpbXBvcnQgJ2Jhc2Uvc2l0ZSc7XHJcbkBpbXBvcnQgJ2Jhc2UvbGlua3MnO1xyXG5AaW1wb3J0ICdiYXNlL3R5cG9ncmFwaHknO1xyXG5AaW1wb3J0ICdiYXNlL2VsZW1lbnRzJztcclxuQGltcG9ydCAnYmFzZS9pbWFnZXMnO1xyXG5AaW1wb3J0ICdiYXNlL2xpc3RzJztcclxuQGltcG9ydCAnYmFzZS90YWJsZXMnOyIsImEge1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogJGh0bWxfbGlua19jb2xvcjtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICY6dmlzaXRlZCB7XHJcbiAgICAgICAgY29sb3I6ICRodG1sX2xpbmtfY29sb3JfdmlzaXRlZDtcclxuICAgIH1cclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgICBjb2xvcjogJGh0bWxfbGlua19jb2xvcl9hY3RpdmU7XHJcbiAgICAgICAgb3V0bGluZTogMDtcclxuICAgIH1cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGNvbG9yOiAgJGh0bWxfbGlua19jb2xvcl9ob3ZlcjtcclxuICAgICAgICBvdXRsaW5lOiAwO1xyXG4gICAgfVxyXG59IiwiYWJiclt0aXRsZV0ge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcclxufVxyXG5cclxuYiwgc3Ryb25nIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG5lbSwgaSB7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbn1cclxuXHJcbmRmbiB7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbn1cclxuXHJcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xyXG4gICAgQGluY2x1ZGUgemVybygpO1xyXG59XHJcbi8vIEdlbmVyYXRlIEhlYWRsaW5lIEVsZW1lbnRzXHJcbkBlYWNoICRlbGVtZW50LCAkc2l6ZSBpbiAkaGVhZGxpbmVzIHtcclxuICAjeyRlbGVtZW50fSB7XHJcbiAgICBmb250LXNpemU6ICRzaXplO1xyXG4gIH1cclxufVxyXG5cclxubWFyayB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmYwO1xyXG4gICAgY29sb3I6ICMwMDA7XHJcbn1cclxuXHJcbnNtYWxsIHtcclxuICAgIGZvbnQtc2l6ZTogOTAlO1xyXG59XHJcblxyXG5zdWIsXHJcbnN1cCB7XHJcbiAgICBmb250LXNpemU6IDkwJTtcclxuICAgIGxpbmUtaGVpZ2h0OiAwO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcblxyXG5zdXAge1xyXG4gICAgdG9wOiAtMC41cmVtO1xyXG59XHJcblxyXG5zdWIge1xyXG4gICAgYm90dG9tOiAtMC41cmVtO1xyXG59XHJcblxyXG5ociB7XHJcbiAgICBoZWlnaHQ6IDA7XHJcbn1cclxuXHJcbmNvZGUsXHJcbmtiZCxcclxucHJlLFxyXG5zYW1wIHtcclxuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gICAgY29sb3I6ICM1NzU3NTc7XHJcbn1cclxuXHJcbmNvZGUsXHJcbmtiZCB7XHJcbiAgICBwYWRkaW5nOiAuMnJlbSAuNHJlbTtcclxuICAgIEBpbmNsdWRlIGJvcmRlcmVkO1xyXG59XHJcblxyXG5jb2RlIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbGluZS1oZWlnaHQ6IDI7XHJcbn1cclxuXHJcbnByZSB7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxufVxyXG4iLCJAbWl4aW4gaGlkZGVuIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbn1cclxuXHJcbkBtaXhpbiBoaWRlX3RleHQge1xyXG4gICAgdGV4dC1pbmRlbnQ6IDEwMCU7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGZvbnQ6IFwiMC8wXCIgYTtcclxuICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIHRleHQtc2hhZG93OiBub25lO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6IDA7XHJcbn1cclxuXHJcbkBtaXhpbiB0ZXh0X3RydW5jYXRlKCkge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxufVxyXG5cclxuQG1peGluIGludmlzaWJsZSB7XHJcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbn1cclxuXHJcbkBtaXhpbiB2aXN1YWxseV9oaWRkZW4ge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGNsaXA6IHJlY3QoMCAwIDAgMCk7XHJcbiAgICBoZWlnaHQ6IDFweDtcclxuICAgIHdpZHRoOiAxcHg7XHJcbiAgICBtYXJnaW46IC0xcHg7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYm9yZGVyOiAwO1xyXG5cclxuICAgICYuZm9jdXNhYmxlIHtcclxuICAgICAgICAmOmFjdGl2ZSwgJjpmb2N1cyB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XHJcbiAgICAgICAgICAgIGNsaXA6IGF1dG87XHJcbiAgICAgICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gYm9yZGVyZWQoJHRvcC1jb2xvcjogI2VlZSwgJHJpZ2h0LWNvbG9yOiAjZWVlLCAkYm90dG9tLWNvbG9yOiAjZWVlLCAkbGVmdC1jb2xvcjogI2VlZSkge1xyXG4gICAgYm9yZGVyLXRvcDogc29saWQgMXB4ICR0b3AtY29sb3I7XHJcbiAgICBib3JkZXItbGVmdDogc29saWQgMXB4ICRsZWZ0LWNvbG9yO1xyXG4gICAgYm9yZGVyLXJpZ2h0OiBzb2xpZCAxcHggJHJpZ2h0LWNvbG9yO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4ICRib3R0b20tY29sb3I7XHJcbn1cclxuXHJcbkBtaXhpbiBib3hfc2hhZG93KCRzaGFkb3c6IDAgMXB4IDNweCByZ2JhKDAsMCwwLC4yNSkpIHtcclxuICAgIGJveC1zaGFkb3c6ICRzaGFkb3c7XHJcbn1cclxuXHJcbkBtaXhpbiBkcm9wX3NoYWRvdygkeC1heGlzOiAwLCAkeS1heGlzOiAxcHgsICRibHVyOiAycHgsICRhbHBoYTogMC4xKSB7XHJcbiAgICBib3gtc2hhZG93OiAkeC1heGlzICR5LWF4aXMgJGJsdXIgcmdiYSgwLCAwLCAwLCAkYWxwaGEpO1xyXG59XHJcblxyXG5AbWl4aW4gb3BhY2l0eSgkb3BhY2l0eTogLjUpIHtcclxuICAgIG9wYWNpdHk6ICRvcGFjaXR5O1xyXG59XHJcblxyXG5AbWl4aW4gcm90YXRlKCRkZWcpIHtcclxuICAgIHRyYW5zZm9ybTogcm90YXRlKCRkZWcpO1xyXG59XHJcblxyXG5AbWl4aW4gc2NhbGUoJHJhdGlvKSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKCRyYXRpbyk7XHJcbn1cclxuXHJcbkBtaXhpbiBza2V3KCR4OiAwLCAkeTogMCkge1xyXG4gICAgdHJhbnNmb3JtOiBza2V3KCR4LCAkeSk7XHJcbn1cclxuXHJcbkBtaXhpbiB0cmFuc2xhdGUoJHg6IDAsICR5OiAwKSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgkeCwgJHkpO1xyXG59XHJcblxyXG5AbWl4aW4gdHJhbnNsYXRlM2QoJHg6IDAsICR5OiAwLCAkejogMCkge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHgsICR5LCAkeik7XHJcbn1cclxuXHJcbkBtaXhpbiBiYWNrZ3JvdW5kX3NpemUoJHNpemUpIHtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogJHNpemU7XHJcbn1cclxuXHJcbkBtaXhpbiBiYWNrZ3JvdW5kX2NsaXAoJGNsaXApIHtcclxuICAgIGJhY2tncm91bmQtY2xpcDogJGNsaXA7XHJcbn1cclxuXHJcbkBtaXhpbiByZXNpemUoJGRpcmVjdGlvbjogYm90aCkge1xyXG4gICAgcmVzaXplOiAkZGlyZWN0aW9uO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbkBtaXhpbiB6ZXJvKCkge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuQG1peGluIGNlbnRlcl9ibG9jaygpIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbn1cclxuIiwiYnV0dG9uLFxyXG5pbnB1dCxcclxub3B0Z3JvdXAsXHJcbnNlbGVjdCxcclxudGV4dGFyZWEge1xyXG4gICAgY29sb3I6IGluaGVyaXQ7XHJcbiAgICBmb250OiBpbmhlcml0O1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbn1cclxuXHJcbmJ1dHRvbiwgc2VsZWN0IHtcclxuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG59XHJcblxyXG5idXR0b24sXHJcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcclxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxyXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG5idXR0b25bZGlzYWJsZWRdLCBodG1sIGlucHV0W2Rpc2FibGVkXSB7XHJcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XHJcbn1cclxuXHJcbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcclxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuaW5wdXQge1xyXG4gICAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLCBpbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcclxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XHJcbiAgICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xyXG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcclxuICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxufVxyXG5cclxuZmllbGRzZXQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcclxuICAgIG1hcmdpbjogMCAycHg7XHJcbiAgICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XHJcbn1cclxuXHJcbmxlZ2VuZCB7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG50ZXh0YXJlYSB7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxufVxyXG5cclxub3B0Z3JvdXAge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn0iLCJpbWcge1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyOiAwO1xyXG59XHJcblxyXG5pbWdbd2lkdGhdLFxyXG5pbWdbaGVpZ2h0XSB7XHJcbiAgICBtYXgtd2lkdGg6IG5vbmU7XHJcbn1cclxuXHJcbnN2Zzpub3QoOnJvb3QpIHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbmZpZ3VyZSB7XHJcbiAgICBAaW5jbHVkZSB6ZXJvKCk7XHJcbiAgICA+IGltZyB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbiAgICBmaWdjYXB0aW9uIHtcclxuICAgICAgICBAaW5jbHVkZSB6ZXJvKCk7XHJcbiAgICB9XHJcbn0iLCJ1bCxcclxub2wge1xyXG4gICAgQGluY2x1ZGUgemVybygpO1xyXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG59XHJcblxyXG5saSB7XHJcbiAgICA+IHVsLFxyXG4gICAgPiBvbCB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIH1cclxufSIsInRhYmxlIHtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICBib3JkZXItc3BhY2luZzogMDtcclxufVxyXG5cclxudGQsIHRoIHtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */