function FormInputValidator(t){"use strict";this.patterns={},this.tests={};for(var e=0;e<t.length;++e)this.addRule(t[e])}var Events=$({});$.subscribe=function(){Events.on.apply(Events,arguments)},$.unsubscribe=function(){Events.off.apply(Events,arguments)},$.publish=function(){Events.trigger.apply(Events,arguments)};var $submitAJAX=function(t){var e=$(this),a=e.find('input[name="_method"]').val()||"POST",n=e.prop("action"),s=e.serialize();$.ajax({type:a,url:n,data:s,success:function(){$.publish("AjaxFormSubmitted",e)}}),t.preventDefault()};$.subscribe("AjaxFormSubmitted",function(){console.log("Event: AjaxFormSubmitted")}),$("form[data-ajax]").on("submit",$submitAJAX),FormInputValidator.prototype.onChange=function(t,e){"use strict";try{if("function"!=typeof this.tests[e])throw new Error('"'+e+'" is not a rule');if(-1===["INPUT","SELECT","TEXTAREA"].indexOf(t.tagName))throw new Error("[input] is not a form input");return this.tests[e](this.patterns[e],t.value)?(t.classList.remove("js-is-invalid"),t.classList.add("js-is-valid"),!0):(t.classList.remove("js-is-valid"),t.classList.add("js-is-invalid"),!1)}catch(a){console.log(a)}},FormInputValidator.prototype.attachRule=function(t,e){"use strict";t.addEventListener("keyup",function(){this.onChange.call(this,t,e)}.bind(this),!1)},FormInputValidator.prototype.addRule=function(t){this.patterns[t.name]=t.pattern,this.tests[t.name]=t.test};var validatorRules=[{name:"required",pattern:null,test:function(t,e){return!!e}},{name:"email",pattern:/[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+[.][A-Za-z]{2,4}/,test:function(t,e){return t.test(e)}},{name:"phone",pattern:/[0-9]{3}[)]?[-. ]?[0-9]{3}/,test:function(t,e){return t.test(e)}},{name:"url",pattern:/^((http|https):\/\/)?(www[.])?([a-zA-Z0-9]|-)+([.][a-zA-Z0-9(-|\/|=|?)?]+)+$/,test:function(t,e){return t.test(e)}}],validator=new FormInputValidator(validatorRules);Array.prototype.slice.call(document.querySelectorAll("[data-validator]")).forEach(function(t){validator.attachRule(t,t.getAttribute("data-validator"))});