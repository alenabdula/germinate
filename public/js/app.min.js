function FormInputValidator(t){"use strict";this.patterns={},this.tests={};for(var a=0;a<t.length;++a)this.addRule(t[a])}FormInputValidator.prototype.onChange=function(t,a){"use strict";try{if("function"!=typeof this.tests[a])throw new Error('"'+a+'" is not a rule');if(-1===["INPUT","SELECT","TEXTAREA"].indexOf(t.tagName))throw new Error("[input] is not a form input");return this.tests[a](this.patterns[a],t.value)?(t.classList.remove("js-is-invalid"),t.classList.add("js-is-valid"),!0):(t.classList.remove("js-is-valid"),t.classList.add("js-is-invalid"),!1)}catch(e){console.log(e)}},FormInputValidator.prototype.attachRule=function(t,a){"use strict";t.addEventListener("keyup",function(){this.onChange.call(this,t,a)}.bind(this),!1)},FormInputValidator.prototype.addRule=function(t){this.patterns[t.name]=t.pattern,this.tests[t.name]=t.test};var validatorRules=[{name:"required",pattern:null,test:function(t,a){return!!a}},{name:"email",pattern:/[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+[.][A-Za-z]{2,4}/,test:function(t,a){return t.test(a)}},{name:"phone",pattern:/[0-9]{3}[)]?[-. ]?[0-9]{3}/,test:function(t,a){return t.test(a)}},{name:"url",pattern:/^((http|https):\/\/)?(www[.])?([a-zA-Z0-9]|-)+([.][a-zA-Z0-9(-|\/|=|?)?]+)+$/,test:function(t,a){return t.test(a)}}],validator=new FormInputValidator(validatorRules);Array.prototype.slice.call(document.querySelectorAll("[data-validator]")).forEach(function(t){validator.attachRule(t,t.getAttribute("data-validator"))});